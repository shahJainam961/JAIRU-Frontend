- name: Run Docker Compose file on VM
  hosts: all
  become: yes

  vars_files:
    - ./env_vars.yaml

  tasks:
    - name: Generate env vars from jinja2 template
      template:
        src: ./env_vars.j2
        dest: ./.env_vars

    - name: Remove docker-compose file if any
      shell:
        rm docker-compose.yaml||rm docker-compose.yml||ls

    - name: Copy Docker Compose file to VM
      copy:
        src: /var/lib/jenkins/workspace/JAIRU-Frontend/docker-compose.yaml
        dest: ./docker-compose.yaml

    - name: stop all the services
      shell:
        docker-compose down

    - name: Remove images of frontend if any
      shell:
        docker rmi murphy961/jairu-frontend:1.0||ls

    - name: Remove images of backend if any
      shell:
        docker rmi murphy961/jairu-backend:1.0||ls

    - name: Create Docker containers without starting
      shell:
        docker-compose up --no-start

    - name: Copying env vars
      shell:
        docker cp ./.env_vars jairu-backend:/jairu/backend


    - name: Start the containers on VM
      shell:
        docker-compose up -d
#      environment:
#        MYSQL_ROOT_PASSWORD: "{{ MYSQL_ROOT_PASSWORD }}"
#        MYSQL_USER: "{{ MYSQL_USER }}"
#        MYSQL_PASSWORD: "{{ MYSQL_PASSWORD }}"
#        MYSQL_DATABASE: "{{ MYSQL_DATABASE }}"
#        BACKEND_EXPOSE_PORT: "{{ BACKEND_EXPOSE_PORT }}"
#        BACKEND_INTERNAL_PORT: "{{ BACKEND_INTERNAL_PORT }}"
#        FRONTEND_EXPOSE_PORT: "{{ FRONTEND_EXPOSE_PORT }}"
#        FRONTEND_INTERNAL_PORT: "{{ FRONTEND_INTERNAL_PORT }}"
#        DB_SERVICE_NAME: "{{ DB_SERVICE_NAME }}"
#        BACKEND_SERVICE_NAME: "{{ BACKEND_SERVICE_NAME }}"
#        FRONTEND_SERVICE_NAME: "{{ FRONTEND_SERVICE_NAME }}"
